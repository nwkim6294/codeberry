# docker-compose.yml
services:
  nginx:
    image: nginx:alpine
    ports:
      - 80:80
    volumes:
      - ./frontend:/usr/share/nginx/html
      - ./nginx.conf:/etc/nginx/conf.d/default.conf
      - ./uploads/images:/usr/share/nginx/html/static/images
      - ./uploads/profiles:/usr/share/nginx/html/static/profiles
    depends_on:
      - api_gateway
    networks:
      - webnet
  
  api_gateway:
    build: ./gateway
    volumes:
      - ./gateway/app:/app
    ports:
      - 8080:8000
    environment:
      - USER_SERVICE_URL=http://user_service:8001
      - BLOG_SERVICE_URL=http://blog_service:8002
    depends_on:
      user_service:
        condition: service_started
      blog_service:
        condition: service_started
    networks:
      - webnet

  user_service:
    build: ./services/user_service
    volumes:
      - ./services/user_service/app:/app
      - ./uploads/profiles:/app/static/profiles
    environment:
      - DATABASE_URL=mysql+asyncmy://${DB_USER}:${DB_PASSWORD}@user_db:3306/user_db
      - REDIS_URL=${REDIS_URL}
    depends_on:
      user_db:
        condition: service_healthy
      redis_db:
        condition: service_started
    networks:
      - webnet
    
  blog_service:
    build: ./services/blog_service
    volumes:
      - ./services/blog_service/app:/app
      - ./uploads/images:/app/static/images
    environment:
      - DATABASE_URL=mysql+asyncmy://${DB_USER}:${DB_PASSWORD}@blog_db:3306/blog_db
      - USER_SERVICE_URL=${USER_SERVICE_URL}
    depends_on:
      blog_db:
        condition: service_healthy
      redis_db:
        condition: service_started
    networks:
      - webnet

  user_db:
    image: mysql:8.0
    volumes:
      - user_db_data:/var/lib/mysql    # ← Named volume 추가
    ports:
      - "33061:3306" # 포트번호
    restart: always
    command: --default-authentication-plugin=mysql_native_password
    environment:
      - MYSQL_ROOT_PASSWORD=${USER_DB_ROOT_PASSWORD}
      - MYSQL_DATABASE=user_db
      - MYSQL_USER=${DB_USER}
      - MYSQL_PASSWORD=${DB_PASSWORD}
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - webnet

  blog_db:
    image: mysql:8.0
    volumes:
      - blog_db_data:/var/lib/mysql    # ← Named volume 추가
    ports:
      - "33062:3306" # 포트번호
    restart: always
    command: --default-authentication-plugin=mysql_native_password
    environment:
      - MYSQL_ROOT_PASSWORD=${USER_DB_ROOT_PASSWORD}
      - MYSQL_DATABASE=blog_db
      - MYSQL_USER=${DB_USER}
      - MYSQL_PASSWORD=${DB_PASSWORD}
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - webnet


  redis_db:
    image: redis:alpine
    networks:
      - webnet

networks:
  webnet:

volumes:
  user_db_data:
  blog_db_data: